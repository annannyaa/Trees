Given a generic tree and an integer n. Find and return the node with next larger element in the tree i.e. find a node with value just greater than n.
Note: Return NULL if no node is present with the value greater than n.
Sample Input 1 :
10 3 20 30 40 2 40 50 0 0 0 0 
18
Sample Output 1 :
20
Sample Input 2 :
10 3 20 30 40 2 40 50 0 0 0 0 
21
Sample Output 2:
30
**************************
#include <climits>
TreeNode<int> *getNextLargerElement(TreeNode<int> *root, int n)
{
    if (root == NULL)
    {
        return root;
    }
    bool flag = false;
    TreeNode<int> *nextLarger = NULL;
    if (root->data > n)
    {
        flag = true;
        nextLarger = root;
    }
    for (int i = 0; i < root->children.size(); i++)
    {
        TreeNode<int> *temp = getNextLargerElement(root->children[i], n);

        if (nextLarger == NULL)
        {
            nextLarger = temp;
        }
        else if (temp != NULL && temp->data < nextLarger->data)
        {
            flag = true;
            nextLarger = temp;
        }
    }
    return nextLarger;
}
